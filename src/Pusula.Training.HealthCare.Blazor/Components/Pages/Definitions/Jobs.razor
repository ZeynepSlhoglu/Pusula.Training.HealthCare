@page "/definition/jobs"

@attribute [Authorize(HealthCarePermissions.Jobs.Default)]

@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout
@using Pusula.Training.HealthCare.Permissions
@using Pusula.Training.HealthCare.Jobs
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.DataForm
@using Syncfusion.Blazor.Inputs

@inherits HealthCareComponentBase
@inject IJobAppService JobAppService
@inject SfDialogService DialogService

<PageHeader Title="@L["Jobs"]" BreadcrumbItems="@_breadcrumbItems"/>

<SfGrid @ref="SfGrid" TValue="JobDto" DataSource="@JobList" AllowPaging AllowSelection EnableHover
        AllowSorting AllowFiltering>
    <SfToolbar>
        <ToolbarItems>
            <ToolbarItem Type="@ItemType.Button" OnClick="OpenJobCreateDialogAsync" Text="@L["Add"]"
                         PrefixIcon="e-icons fas fa-plus" TooltipText="@L["Add"]"></ToolbarItem>
            <ToolbarItem Type="@ItemType.Button" OnClick="DeleteSelectedRowsAsync"
                         Disabled="@(SfGrid.SelectedRecords.Count == 0)"
                         Text="@L["Delete"]" PrefixIcon="e-icons fas fa-trash-alt"
                         TooltipText="@L["Delete"]"></ToolbarItem>
            <ToolbarItem Type="@ItemType.Separator"></ToolbarItem>
        </ToolbarItems>
    </SfToolbar>
    <GridEvents TValue="JobDto"
                RowSelected="@SelectedRowChangedAsync"
                RowDeselected="@SelectedRowChangedAsync"/>
    <GridPageSettings PageSize="10"/>
    <GridSelectionSettings CheckboxOnly PersistSelection/>
    <GridColumns>
        <GridColumn Type="ColumnType.CheckBox" Width="30"></GridColumn>
        <GridColumn Field="@nameof(JobDto.Name)" HeaderText="@L["Name"]"/>
        <GridColumn TextAlign="TextAlign.Right">
            <Template>
                <SfButton OnClick="@(() => OpenJobUpdateDialogAsync(context as JobDto))"
                          CssClass="e-flat"
                          IconCss="e-icons e-edit"></SfButton>
                <SfButton OnClick="@(() => DeleteAsync(context as JobDto))"
                          CssClass="e-flat"
                          IconCss="e-icons e-trash"></SfButton>
            </Template>
        </GridColumn>
    </GridColumns>
</SfGrid>


@* ************************* CREATE MODAL ************************* *@
<SfDialog @ref="JobCreateDialog" Target="#target" Width="400px" IsModal ShowCloseIcon Visible="false">
    <DialogEvents Closed="@SetDefaultsForJobCreateDialog"></DialogEvents>
    <DialogTemplates>
        <Header>@L["NewJob"]</Header>
        <Content>
            <SfDataForm ID="JobCreateForm"
                        Model="@JobCreateDto"
                        ButtonsAlignment="FormButtonsAlignment.Right"
                        OnValidSubmit="@CreateAsync">
                <FormValidator>
                    <DataAnnotationsValidator/>
                </FormValidator>
                <FormTemplate>
                    <SfTextBox @bind-Value="@JobCreateDto.Name"
                               Placeholder="@L["Name"]" FloatLabelType="FloatLabelType.Always"></SfTextBox>
                </FormTemplate>
                <FormButtons>
                    <SfButton type="button" CssClass="e-outline"
                              OnClick="@HideJobCreateDialogAsync">@L["Cancel"]</SfButton>
                    <SfButton type="submit" IsPrimary>@L["Save"]</SfButton>
                </FormButtons>
            </SfDataForm>

        </Content>
    </DialogTemplates>
</SfDialog>

@* ************************* UPDATE MODAL ************************* *@
<SfDialog @ref="JobUpdateDialog" Target="#target" Width="400px" IsModal ShowCloseIcon Visible="false">
    <DialogEvents Closed="@SetDefaultsForJobUpdateDialog"></DialogEvents>
    <DialogTemplates>
        <Header>@L["EditJob"]</Header>
        <Content>
            <SfDataForm ID="JobUpdateForm"
                        Model="@JobUpdateDto"
                        ButtonsAlignment="FormButtonsAlignment.Right"
                        OnValidSubmit="@UpdateAsync">
                <FormValidator>
                    <DataAnnotationsValidator/>
                </FormValidator>
                <FormTemplate>
                    <SfTextBox @bind-Value="@JobUpdateDto.Name"
                               Placeholder="@L["Name"]" FloatLabelType="FloatLabelType.Always"></SfTextBox>
                </FormTemplate>
                <FormButtons>
                    <SfButton type="button" CssClass="e-outline"
                              OnClick="@HideJobUpdateDialogAsync">@L["Cancel"]</SfButton>
                    <SfButton type="submit" IsPrimary>@L["Save"]</SfButton>
                </FormButtons>
            </SfDataForm>

        </Content>
    </DialogTemplates>
</SfDialog>