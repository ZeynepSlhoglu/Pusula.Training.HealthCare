@page "/definition/doctors"

@attribute [Authorize(HealthCarePermissions.Doctors.Default)]
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout
@using Pusula.Training.HealthCare.Permissions
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.DataForm
@using Syncfusion.Blazor.Navigations
@using Pusula.Training.HealthCare.Doctors
@using Position = Syncfusion.Blazor.Popups.Position
@using Pusula.Training.HealthCare.Blazor.Components.Dialogs.Doctors
@using Pusula.Training.HealthCare.Departments
@using Syncfusion.Blazor.DropDowns
@using GridColumns = Syncfusion.EJ2.Grids.GridColumns

@inherits HealthCareComponentBase

@inject IDoctorAppService DoctorAppService
@inject IDepartmentsAppService DepartmentsAppService
@inject SfDialogService DialogService

<PageHeader Title="" BreadcrumbItems="BreadcrumbItems"/>

@* ************************* SEARCH ************************* *@
<div class="bg-white mb-3">
    <SfDataForm Model="@Filter" OnValidSubmit="@SearchAsync"
                ButtonsAlignment="FormButtonsAlignment.Stretch"
                ValidationDisplayMode="FormValidationDisplay.Tooltip">
        <FormTemplate>
            <div class="d-flex gap-2 p-2 align-items-end">
                <SfTextBox @bind-Value="@Filter.FullName" Placeholder="@L["Name"]"/>
                <SfDropDownList TItem="DepartmentDto" TValue="Guid?"
                                @bind-Value="@Filter.DepartmentId" PopupHeight="150px"
                                Placeholder="@L["Department"]"
                                DataSource="@DepartmentList" ShowClearButton>
                    <DropDownListFieldSettings Value="Id" Text="Name"/>
                </SfDropDownList>
                <SfButton type="submit" IsPrimary CssClass="e-outline" IconCss="e-icons e-filter"
                          IconPosition="IconPosition.Left">@L["ApplyFilter"]</SfButton>
            </div>
        </FormTemplate>
        <FormButtons></FormButtons>
    </SfDataForm>
</div>

@* ************************* DATA GRID ************************* *@
<SfGrid @ref="SfGrid" TValue="DoctorWithNavigationPropertiesDto" Height="600px" DataSource="@DoctorList"
        AllowSelection="@CanDeleteDoctor" EnableHover EnableVirtualMaskRow EnableStickyHeader>
    <SfToolbar>
        <ToolbarItems>
            <ToolbarItem Type="@ItemType.Button" OnClick="OpenCreateDoctorDialogAsync" Text="@L["Add"]"
                         PrefixIcon="e-icons fas fa-plus" TooltipText="@L["NewDoctor"]"
                         Disabled="@(!CanCreateDoctor)"></ToolbarItem>
            <ToolbarItem Type="@ItemType.Button" OnClick="DeleteSelectedDoctorsAsync"
                         Disabled="@(SfGrid.SelectedRecords.Count == 0 || !CanDeleteDoctor)"
                         Text="@L["Delete"]" PrefixIcon="e-icons fas fa-trash-alt"
                         TooltipText="@L["Delete"]"></ToolbarItem>
        </ToolbarItems>
    </SfToolbar>
    <GridEvents TValue="DoctorWithNavigationPropertiesDto"
                RowSelected="@SelectedDoctorRowChangedAsync"
                RowDeselected="@SelectedDoctorRowChangedAsync"/>
    <GridSelectionSettings CheckboxOnly PersistSelection/>
    <GridColumns>
        <GridColumn Type="ColumnType.CheckBox" Width="30" Visible="@CanDeleteDoctor"></GridColumn>
        <GridColumn HeaderText="@L["Title"]" AutoFit>
            <Template>
                @{
                    var dto = (context as DoctorWithNavigationPropertiesDto)!;
                    @dto.Title.Name
                }
            </Template>
        </GridColumn>
        <GridColumn HeaderText="@L["Name"]">
            <Template>
                @{
                    var dto = (context as DoctorWithNavigationPropertiesDto)!;
                    @dto.Doctor.FullName
                }
            </Template>
        </GridColumn>
        <GridColumn HeaderText="@L["AppointmentTime"]" AutoFit>
            <Template>
                @{
                    var dto = (context as DoctorWithNavigationPropertiesDto)!;
                    @dto.Doctor.AppointmentTime
                }
            </Template>
        </GridColumn>
        <GridColumn HeaderText="@L["Department"]">
            <Template>
                @{
                    var dto = (context as DoctorWithNavigationPropertiesDto)!;
                    @dto.Department.Name
                }
            </Template>
        </GridColumn>

        <GridColumn TextAlign="TextAlign.Right">
            <Template>
                @{
                    var doctor = (context as DoctorWithNavigationPropertiesDto)!.Doctor;
                }
                <div class="d-flex justify-content-end gap-1">
                    <SfTooltip Position="Position.BottomCenter" Content="@L["Account"]">
                        <SfButton
                            OnClick="@(() => ShowDoctorAccountDialogAsync(doctor.UserId))"
                            CssClass="e-flat"
                            IconCss="e-icons fas fa-user-shield"></SfButton>
                    </SfTooltip>
                    <SfTooltip Position="Position.BottomCenter" Content="@L["Update"]">
                        <SfButton
                            OnClick="@(() => OpenEditDoctorModalAsync(doctor.Id))"
                            CssClass="e-flat"
                            IconCss="e-icons far fa-edit"></SfButton>
                    </SfTooltip>
                    <SfTooltip Position="Position.BottomCenter" Content="@L["Delete"]">
                        <SfButton
                            OnClick="@(() => DeleteDoctorAsync(doctor.Id))"
                            CssClass="e-flat"
                            IconCss="e-icons far fa-trash-alt"></SfButton>
                    </SfTooltip>
                </div>
            </Template>
        </GridColumn>
    </GridColumns>
</SfGrid>

@* ************************* CREATE MODAL ************************* *@
<DoctorCreateDialog @ref="CreateDoctorDialog" DoctorCreatedAsync="GetDoctorsAsync"/>

@* ************************* UPDATE MODAL ************************* *@
<DoctorUpdateDialog @ref="UpdateDoctorDialog" DoctorUpdatedAsync="GetDoctorsAsync"/>

@* ************************* ACCOUNT MODAL ************************* *@
<DoctorAccountDialog @ref="DoctorAccountDialog"/>

<style>
    .e-btn.e-top-icon-btn {
        padding: 4px 11px !important;
    }

    .e-btn-icon.e-icon-top {
        padding-bottom: 0 !important;
    }
</style>