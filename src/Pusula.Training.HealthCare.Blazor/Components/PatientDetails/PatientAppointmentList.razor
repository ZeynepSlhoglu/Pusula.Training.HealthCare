@using Microsoft.Extensions.Localization
@using Pusula.Training.HealthCare.Appointments
@using Pusula.Training.HealthCare.Localization

@inject IStringLocalizer<HealthCareResource> L
@inject IAppointmentsAppService AppointmentsAppService

<HcCard CardIcon="far fa-hourglass" Title="@L["WaitingAppointments"]"
        NoContent="@(Appointments == null || !Appointments.Any())">
    <ChildContent>
        @if (Appointments != null && Appointments.Any())
        {
            <div class="row row-cols-2 g-2 p-2">
                @foreach (var appointment in Appointments)
                {
                    <div
                        class="col">
                        <div
                            class="border-1 border-grey-300 border-r-6p fs-13p p-8p d-flex flex-column">
                            <span class="fw-700 color-blue-500">@appointment.AppointmentType.Name</span>
                            <div class="fw-700 d-flex gap-1">
                                <span>@appointment.Doctor.FullName</span>
                                <span>@appointment.Appointment.StartTime.ToString("dd.MM.yyyy hh:mm") - @appointment.Appointment.EndTime.ToString("hh:mm")</span>
                            </div>
                            <span>@appointment.Department.Name</span>
                        </div>
                    </div>
                }
            </div>
        }
    </ChildContent>
</HcCard>

@code {

    [Parameter]
    public Guid PatientId { get; set; }

    private IReadOnlyList<AppointmentWithNavigationPropertiesDto>? Appointments { get; set; }

    protected override async Task OnInitializedAsync() => await GetPatientWaitingAppointmentsAsync();

    private async Task GetPatientWaitingAppointmentsAsync() => Appointments = await AppointmentsAppService.GetPatientWaitingAppointmentsAsync(PatientId);

}