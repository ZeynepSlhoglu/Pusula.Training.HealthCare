@using Microsoft.Extensions.Localization
@using Pusula.Training.HealthCare.Localization
@using Pusula.Training.HealthCare.Patients
@using Syncfusion.Blazor.Cards
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Popups
@using Position = Syncfusion.Blazor.Popups.Position
@inherits LayoutComponentBase
@layout MainLayout
@inject IPatientAppService PatientAppService
@inject IStringLocalizer<HealthCareResource> L

@if (Patient != null)
{
   <SfCard ID="PatientCard" CssClass="mb-3 position-relative">
      <CardContent>
         <div class="d-flex justify-content-between align-items-center">
            <div>
               <div class="d-flex gap-1 align-items-center mb-1">
                  <h5 class="mb-0">@Patient.Patient.FullName</h5>
                  <span class="badge text-bg-secondary">@Patient.PatientType.Name</span>
                  <span>@Patient.Country.Iso</span>
               </div>

               <div class="d-flex gap-1">
                  <PatientGenderIcon Gender="@Patient.Patient.Gender"/>
                  <div>
                     <span>Hasta No:</span>
                     <span>@Patient.Patient.No</span>
                  </div>
                  <span class="vr"></span>
                  <div>
                     <div class="d-flex gap-1 align-items-end">
                        <span>@Patient.Patient.BirthDate.ToString("dd.MM.yyyy")</span>
                        <span class="fs-12p">(@Patient.Patient.Age.Item1 @Patient.Patient.Age.Item2)</span>
                     </div>
                  </div>
                  <span class="vr"></span>
                  <div>
                     @Patient.Patient.EmailAddress
                  </div>
                  <span class="vr"></span>
                  <div>
                     @($"+{Patient.Patient.MobilePhoneNumberCode} {Patient.Patient.MobilePhoneNumber}")
                  </div>
               </div>
            </div>
            <div class="d-flex flex-column gap-1">
               <div class="d-flex gap-1">
                  <SfTooltip Position="Position.BottomCenter" Content="@L["Call"]">
                     <SfButton CssClass="e-outline" IconCss="fas fa-phone"/>
                  </SfTooltip>
                  <SfTooltip Position="Position.BottomCenter" Content="@L["SendMail"]">
                     <SfButton CssClass="e-outline" IconCss="far fa-envelope"/>
                  </SfTooltip>
               </div>
               <div>
                  <a href="javascript:;" class="text-decoration-none"
                     @onclick="@(() => ShowAddresses = !ShowAddresses)"
                     disabled="@(!Patient.Patient.Addresses.Any())">Addresses</a>
                  @if (ShowAddresses)
                  {
                     <div id="AddressesCard"
                          class="bg-white mt-1 border border-r-4p shadow-sm position-absolute top-100 end-0">
                        @foreach (var address in Patient.Patient.Addresses)
                        {
                           <div class="p-2 border-bottom">
                              <h6 class="mb-0">@address.AddressTitle</h6>
                              <p class="mb-0">@address.AddressLine @address.District.Name @(address.District.City.Name)/@(address.District.City.Country.Name)</p>
                           </div>
                        }
                     </div>
                  }
               </div>
            </div>
         </div>
      </CardContent>
   </SfCard>
}

@if (PatientNo != default)
{
   <div class="bg-white border-r-1r">
      <div class="btn-group">
         <NavLink class="btn border-r-tl-1r border-r-bl-1r py-1 px-4 text-decoration-none" Match="NavLinkMatch.All"
                  ActiveClass="btn-primary"
                  href="@BaseAddress">Ã–zet
         </NavLink>
         <NavLink class="btn py-1 px-4 text-decoration-none" Match="NavLinkMatch.All"
                  ActiveClass="btn-primary"
                  href="@($"{BaseAddress}/appointment")">Randevu
         </NavLink>
         <NavLink class="btn border-r-tr-1r border-r-br-1r py-1 px-4 text-decoration-none" Match="NavLinkMatch.All"
                  ActiveClass="btn-primary"
                  href="@($"{BaseAddress}/file")">Dosyalar
         </NavLink>
      </div>
   </div>
}

@Body

@code{

   [CascadingParameter] RouteData RouteData { get; set; } = null!;
   private PatientWithNavigationPropertiesDto? Patient { get; set; }
   private string BaseAddress => $"prm/management/patient-detail/{PatientNo}";
   private int PatientNo { get; set; }
   private bool ShowAddresses { get; set; }

   protected override async Task OnInitializedAsync()
   {
      if (RouteData.RouteValues.TryGetValue("PatientNo", out var patientNo))
      {
         PatientNo = Convert.ToInt32(patientNo);
         Patient = await PatientAppService.GetWithNavigationPropertiesAsync(PatientNo);
      }
   }

}


<style>
   #PatientCard.e-card, #PatientCard.e-card .e-card-content {
      overflow: visible;
   }
</style>