trigger:
  branches:
    include:
      - devops

pool:
  name: pusula-akademi-team3-agent
  demands:
    - agent.name -equals team3-node1

variables:
  imageName: 'registry.gitlab.com/berkmkaracayir/pusula'
  dockerFilePath: 'Dockerfile'
  publishDir: '$(Build.ArtifactStagingDirectory)'
  GITLAB_REGISTRY_USER: 'berkmkaracayir' 
  GITLAB_REGISTRY_PASSWORD: 'glpat-vsCVyES1xiGb2zQeZ4Eg'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- bash: |
    # Update package list and install dependencies
    sudo apt-get update && sudo apt-get install -y curl && \
    curl -fsSL https://deb.nodesource.com/setup_18.x | sudo bash - && \
    sudo apt-get install -y nodejs && \
    sudo npm install -g npm

    # Install dotnet tools
    dotnet tool restore
    dotnet tool install -g Volo.Abp.Cli --version 8.0.*

    # Add ABP CLI to PATH
    export PATH="$PATH:/root/.dotnet/tools"
    echo "ABP CLI version: $(abp --version)"

    # Verify abp command exists
    which abp
    abp install-libs
  displayName: 'Install Dependencies and ABP CLI'


- bash: |
    # Build the project
    dotnet build src/Pusula.Training.HealthCare.Blazor/Pusula.Training.HealthCare.Blazor.csproj --configuration Release
  displayName: 'Build Project'

- bash: |
    # Publish the project
    dotnet publish src/Pusula.Training.HealthCare.Blazor/Pusula.Training.HealthCare.Blazor.csproj --configuration Release --output $(publishDir)
  displayName: 'Publish Project'

- bash: |
    # Create image tag in the format: year-month-day-hour:minute-commitId
    TAG=$(date +"%Y-%m-%d-%H.%M")-$(echo $(Build.SourceVersion) | cut -c1-7)
    echo "Generated image tag: $TAG"
    echo "##vso[task.setvariable variable=imageTag]$TAG"
  displayName: 'Generate Image Tag'

- bash: |
    # Build the Docker image
    docker build -t $(imageName):$(imageTag) -f $(dockerFilePath) .
  displayName: 'Build Docker Image'

- bash: |
    # Log in to GitLab Container Registry
    echo $(GITLAB_REGISTRY_PASSWORD) | docker login registry.gitlab.com -u $(GITLAB_REGISTRY_USER) --password-stdin
  displayName: 'Login to GitLab Container Registry'

- bash: |
    # Push Docker image to GitLab Container Registry
    docker push $(imageName):$(imageTag)
  displayName: 'Push Docker Image to GitLab Container Registry'

- bash: |
    # Update docker-compose.yml with dynamic tag
    sed -i "s|registry.gitlab.com/berkmkaracayir/pusula:.*|registry.gitlab.com/berkmkaracayir/pusula:$(imageTag)|g" devops/Apps/healtcare/deployment.yml
  displayName: 'Update Docker Compose with Dynamic Tag'

- bash: |
    # Deploy to Docker Swarm
    docker stack deploy --compose-file devops/Apps/healtcare/deployment.yml blazor-dbmigrator
  displayName: 'Deploy to Docker Swarm'
