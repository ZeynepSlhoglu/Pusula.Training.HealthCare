trigger:
  branches:
    include:
      - development

pool:
  name: pusula-akademi-team3-agent
  demands:
    - agent.name -equals team3-node1

variables:
  imageName: 'pusula-blazor'
  dockerFilePath: 'Dockerfile'
  publishDir: '$(Build.ArtifactStagingDirectory)'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- bash: |
    # Restore NuGet packages
    dotnet restore src/Pusula.Training.HealthCare.Blazor/Pusula.Training.HealthCare.Blazor.csproj
  displayName: 'Restore NuGet Packages'

- bash: |
    # Build the project
    dotnet build src/Pusula.Training.HealthCare.Blazor/Pusula.Training.HealthCare.Blazor.csproj --configuration Release
  displayName: 'Build Project'

- bash: |
    # Publish the project
    dotnet publish src/Pusula.Training.HealthCare.Blazor/Pusula.Training.HealthCare.Blazor.csproj --configuration Release --output $(publishDir)
  displayName: 'Publish Project'

- bash: |
    # Build the Docker image
    docker build -t $(imageName):$(Build.BuildId) -f $(dockerFilePath) .
  displayName: 'Build Docker Image'

- bash: |
    # Remove the existing network if it exists
    docker network rm healthcare-network || true
    # Create the network if it doesn't exist
    docker network create --driver overlay --scope swarm healthcare-network || true
    # Deploy to Docker Swarm
    docker stack deploy --compose-file etc/docker/docker-compose.yml pusula
  displayName: 'Deploy to Docker Swarm'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(publishDir)'
    Contents: '**'
    TargetFolder: '$(publishDir)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(publishDir)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
